require(distill)
create_post('Install Docker Engine')
require(distill)
require(distill)
create_post('Shiny Proxy' )
create_post('Shiny app in a container' )
shiny::runApp('_posts/2020-09-19-shiny-app-in-a-container')
sudo docker run -it --rm -p 9393:9393 iris
runApp('_posts/2020-09-19-shiny-app-in-a-container/iris')
create_post('How to dockerize ShinyProxy')
create_post('How to move docker data direcory')
require(distill)
create_post('Install Portainer')
knitr::opts_chunk$set(echo = FALSE)
require(distill)
create_post('Install ShinyProxy')
install.packages('odbc')
con <- dbConnect(MySQL(),
user='dwhuser',
password='dwhuserpwd',
dbname='dwh',
host='10.31.68.21')
requiore(odbc)
require(odbc)
con <- dbConnect(MySQL(),
user='dwhuser',
password='dwhuserpwd',
dbname='dwh',
host='10.31.68.21')
install.packages('RMYSQL')
install.packages('RMySQL')
con <- dbConnect(MySQL(),
user='dwhuser',
password='dwhuserpwd',
dbname='dwh',
host='10.31.68.21')
require(RMySQL)
install.packages('RMySQL')
con <- dbConnect(MySQL(),
user='dwhuser',
password='dwhuserpwd',
dbname='dwh',
host='10.31.68.21')
require(RMySQL)
con <- dbConnect(MySQL(),
user='dwhuser',
password='dwhuserpwd',
dbname='dwh',
host='10.31.68.21')
rm(list = ls())
requie(distill)
require(distill)
create_post('minicran')
install.packages('minicrarn')
install.packages('miniCRAN')
require(miniCRAN)
?pkgDep
repo <- 'https://cran.wu.ac.at/'
my_pkgs <- 'tidyverse'
all_pkgs <- pkgDep(my_pkg, repo = repo, type = 'source', suggest = FALSE)
repo <- 'https://cran.wu.ac.at/'
my_pkgs <- 'tidyverse'
all_pkgs <- pkgDep(my_pkgs, repo = repo, type = 'source', suggest = FALSE)
all_pkgs
repo <- 'https://cran.wu.ac.at/'
my_pkgs <- 'tidyverse'
all_pkgs <- pkgDep(my_pkgs, repo = repo, type = 'source', suggest = FALSE, depends = TRUE)
all_pkgs
dir.create(minicran_path, 'minicran')
minicran_path <- '/data/minicran'
dir.create(minicran_path, 'minicran')
minicran_path <- '/data/minicran'
dir.create(minicran_path, 'minicran')
path <- '/data/minicran'
dir.create(path, 'minicran')
makeRepo(all_pkgs, path = path , repo = repo, type = 'source')
knitr::opts_chunk$set(echo = T)
require(miniCRAN)
repo <- 'https://cran.wu.ac.at/'
my_pkgs <- 'tidyverse'
all_pkgs <- pkgDep(my_pkgs, repo = repo, type = 'source', suggest = FALSE)
all_pkgs
install.packages(pkgs = 'utf8'. repo = 'file:///data/minicran/')
install.packages(pkgs = 'utf8', repo = 'file:///data/minicran/')
addPackage('scuba', , path = path , repo = repo, type = 'source')
addPackage('scuba', , path = path , repo = repo, type = 'source')
addLocalPackage()
addLocalPackage
?addLocalPackage
search()
ls(2)
?addPackageListingGithub
addGithubPackage(githubPath="https://github.com/jalvesaq/colorout",path=path,build=TRUE)
addGithubPackage <- function(githubPath,...){
packageName <- basename(githubPath)
exDir <- file.path(tempdir(),packageName)
if(file.exists(exDir)) unlink(exDir, recursive=TRUE)
zipFile <- file.path(tempdir(),paste0(packageName,".zip"))
download.file(paste0(githubPath,"/","zipball/master"),zipFile)
unzip(zipFile, exdir = exDir)
file.rename(list.files(exDir,full.names=TRUE)[1],file.path(exDir,packageName))
addLocalPackage(packageName,exDir,...)
}
addGithubPackage(githubPath="https://github.com/jalvesaq/colorout",path=path,build=TRUE)
install.packages(pkgs = 'colorout', repo = 'file:///data/minicran/')
updatePackages(path = path, repo = repo, type = "source", ask = FALSE)
ls()
rm(list = ls())
ls()
available.packages()
head(available.packages())
i <- head(available.packages())
class(i)
dimnames(i)
