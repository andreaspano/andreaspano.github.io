[
  {
    "path": "posts/2021-02-27-interactive-plotly/",
    "title": "Interactive Plot_ly",
    "description": "Buildinh interactive plots with `plotly`",
    "author": [
      {
        "name": "Andrea Spano",
        "url": "andreaspano.github.io"
      }
    ],
    "date": "2021-03-27",
    "categories": [],
    "contents": "\nIntro\nThe idea is about using package plotly for producing higly interactive plots for a Shiny application\nOfficial documentation about plotly is superb. Nevertheless, as this graphics grammar, within the R community is not as spread as ggplot is, few topics require a bit of extra research.\nGiven\na data set with four columns: x, y , w, z\na plot x and y onto pl1\nplot w and z onto pl2\npl as a subplot of pl1 and pl2\nI would like to:\nbe able to select a set of contiguos points in pl1\nobserve the selected points marked with new color and larger size\nobserve the same effect on corresponding points on pl2\nI will be using the classic iris data for this example.\nStep 1:\nLoad the required packages\n\n\nrequire(plotly)\nrequire(dplyr)\n\n\n\nStep 2:\nAdd a unique id to data\n\n\ndata <- iris %>% mutate ( id = 1:n())\n\n\n\nStep 3:\nTransform data into a ShareData object\n\n\ndata <- data %>% highlight_key(~id) \n\n\n\nStep 4:\nBuild your plots as you would normally do\n\n\npl1 <- plot_ly(data, \n               x = ~ Sepal.Length, y = ~Sepal.Width, \n               type = 'scatter', mode = 'markers', \n               marker = list ( color = 'green')) %>% \n  layout(showlegend=F)\n               \npl2 <- plot_ly(data, \n               x = ~Petal.Length, y = ~Petal.Width, \n               type = 'scatter', mode = 'markers',\n               marker = list ( color = 'blue')) %>% \n  layout(showlegend=F)\n\n\n\nStep 5:\nBind your plots into a single subplot\n\n\npl <- subplot(pl1, pl2, nrows = 2)\n\n\n\nStep 6:\nLink the plots\n\n\npl <- pl %>% \n  highlight(on = \"plotly_select\", off = 'plotly_doubleclick', \n            opacityDim = .5, \n            selected = attrs_selected(marker = list ( size = 20, color = 'orange')))\n\n\n\nStep 7:\nDisplay results\n\n\npl\n\n\n\n{\"x\":{\"data\":[{\"x\":[5.1,4.9,4.7,4.6,5,5.4,4.6,5,4.4,4.9,5.4,4.8,4.8,4.3,5.8,5.7,5.4,5.1,5.7,5.1,5.4,5.1,4.6,5.1,4.8,5,5,5.2,5.2,4.7,4.8,5.4,5.2,5.5,4.9,5,5.5,4.9,4.4,5.1,5,4.5,4.4,5,5.1,4.8,5.1,4.6,5.3,5,7,6.4,6.9,5.5,6.5,5.7,6.3,4.9,6.6,5.2,5,5.9,6,6.1,5.6,6.7,5.6,5.8,6.2,5.6,5.9,6.1,6.3,6.1,6.4,6.6,6.8,6.7,6,5.7,5.5,5.5,5.8,6,5.4,6,6.7,6.3,5.6,5.5,5.5,6.1,5.8,5,5.6,5.7,5.7,6.2,5.1,5.7,6.3,5.8,7.1,6.3,6.5,7.6,4.9,7.3,6.7,7.2,6.5,6.4,6.8,5.7,5.8,6.4,6.5,7.7,7.7,6,6.9,5.6,7.7,6.3,6.7,7.2,6.2,6.1,6.4,7.2,7.4,7.9,6.4,6.3,6.1,7.7,6.3,6.4,6,6.9,6.7,6.9,5.8,6.8,6.7,6.7,6.3,6.5,6.2,5.9],\"y\":[3.5,3,3.2,3.1,3.6,3.9,3.4,3.4,2.9,3.1,3.7,3.4,3,3,4,4.4,3.9,3.5,3.8,3.8,3.4,3.7,3.6,3.3,3.4,3,3.4,3.5,3.4,3.2,3.1,3.4,4.1,4.2,3.1,3.2,3.5,3.6,3,3.4,3.5,2.3,3.2,3.5,3.8,3,3.8,3.2,3.7,3.3,3.2,3.2,3.1,2.3,2.8,2.8,3.3,2.4,2.9,2.7,2,3,2.2,2.9,2.9,3.1,3,2.7,2.2,2.5,3.2,2.8,2.5,2.8,2.9,3,2.8,3,2.9,2.6,2.4,2.4,2.7,2.7,3,3.4,3.1,2.3,3,2.5,2.6,3,2.6,2.3,2.7,3,2.9,2.9,2.5,2.8,3.3,2.7,3,2.9,3,3,2.5,2.9,2.5,3.6,3.2,2.7,3,2.5,2.8,3.2,3,3.8,2.6,2.2,3.2,2.8,2.8,2.7,3.3,3.2,2.8,3,2.8,3,2.8,3.8,2.8,2.8,2.6,3,3.4,3.1,3,3.1,3.1,3.1,2.7,3.2,3.3,3,2.5,3,3.4,3],\"mode\":\"markers\",\"marker\":{\"color\":\"green\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"type\":\"scatter\",\"key\":[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\"],\"set\":\"SharedData91574a90\",\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"_isNestedKey\":false,\"frame\":null},{\"x\":[1.4,1.4,1.3,1.5,1.4,1.7,1.4,1.5,1.4,1.5,1.5,1.6,1.4,1.1,1.2,1.5,1.3,1.4,1.7,1.5,1.7,1.5,1,1.7,1.9,1.6,1.6,1.5,1.4,1.6,1.6,1.5,1.5,1.4,1.5,1.2,1.3,1.4,1.3,1.5,1.3,1.3,1.3,1.6,1.9,1.4,1.6,1.4,1.5,1.4,4.7,4.5,4.9,4,4.6,4.5,4.7,3.3,4.6,3.9,3.5,4.2,4,4.7,3.6,4.4,4.5,4.1,4.5,3.9,4.8,4,4.9,4.7,4.3,4.4,4.8,5,4.5,3.5,3.8,3.7,3.9,5.1,4.5,4.5,4.7,4.4,4.1,4,4.4,4.6,4,3.3,4.2,4.2,4.2,4.3,3,4.1,6,5.1,5.9,5.6,5.8,6.6,4.5,6.3,5.8,6.1,5.1,5.3,5.5,5,5.1,5.3,5.5,6.7,6.9,5,5.7,4.9,6.7,4.9,5.7,6,4.8,4.9,5.6,5.8,6.1,6.4,5.6,5.1,5.6,6.1,5.6,5.5,4.8,5.4,5.6,5.1,5.1,5.9,5.7,5.2,5,5.2,5.4,5.1],\"y\":[0.2,0.2,0.2,0.2,0.2,0.4,0.3,0.2,0.2,0.1,0.2,0.2,0.1,0.1,0.2,0.4,0.4,0.3,0.3,0.3,0.2,0.4,0.2,0.5,0.2,0.2,0.4,0.2,0.2,0.2,0.2,0.4,0.1,0.2,0.2,0.2,0.2,0.1,0.2,0.2,0.3,0.3,0.2,0.6,0.4,0.3,0.2,0.2,0.2,0.2,1.4,1.5,1.5,1.3,1.5,1.3,1.6,1,1.3,1.4,1,1.5,1,1.4,1.3,1.4,1.5,1,1.5,1.1,1.8,1.3,1.5,1.2,1.3,1.4,1.4,1.7,1.5,1,1.1,1,1.2,1.6,1.5,1.6,1.5,1.3,1.3,1.3,1.2,1.4,1.2,1,1.3,1.2,1.3,1.3,1.1,1.3,2.5,1.9,2.1,1.8,2.2,2.1,1.7,1.8,1.8,2.5,2,1.9,2.1,2,2.4,2.3,1.8,2.2,2.3,1.5,2.3,2,2,1.8,2.1,1.8,1.8,1.8,2.1,1.6,1.9,2,2.2,1.5,1.4,2.3,2.4,1.8,1.8,2.1,2.4,2.3,1.9,2.3,2.5,2.3,1.9,2,2.3,1.8],\"mode\":\"markers\",\"marker\":{\"color\":\"blue\",\"line\":{\"color\":\"rgba(255,127,14,1)\"}},\"type\":\"scatter\",\"key\":[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\"],\"set\":\"SharedData91574a90\",\"error_y\":{\"color\":\"rgba(255,127,14,1)\"},\"error_x\":{\"color\":\"rgba(255,127,14,1)\"},\"line\":{\"color\":\"rgba(255,127,14,1)\"},\"xaxis\":\"x2\",\"yaxis\":\"y2\",\"_isNestedKey\":false,\"frame\":null}],\"layout\":{\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"anchor\":\"y\"},\"xaxis2\":{\"domain\":[0,1],\"automargin\":true,\"anchor\":\"y2\"},\"yaxis2\":{\"domain\":[0,0.48],\"automargin\":true,\"anchor\":\"x2\"},\"yaxis\":{\"domain\":[0.52,1],\"automargin\":true,\"anchor\":\"x\"},\"annotations\":[],\"shapes\":[],\"images\":[],\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"showlegend\":false,\"dragmode\":\"select\",\"hovermode\":\"closest\"},\"attrs\":{\"10cccc70228890\":{\"x\":{},\"y\":{},\"mode\":\"markers\",\"marker\":{\"color\":\"green\"},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\"},\"10cccc5adcf2e4\":{\"x\":{},\"y\":{},\"mode\":\"markers\",\"marker\":{\"color\":\"blue\"},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\"}},\"source\":\"A\",\"config\":{\"showSendToCloud\":false},\"highlight\":{\"on\":\"plotly_selected\",\"off\":\"plotly_doubleclick\",\"persistent\":false,\"dynamic\":false,\"color\":null,\"selectize\":false,\"defaultValues\":null,\"opacityDim\":0.5,\"selected\":{\"marker\":{\"size\":20,\"color\":\"orange\"},\"opacity\":1},\"debounce\":0,\"ctGroups\":[\"SharedData91574a90\"]},\"subplot\":true,\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}\n\n\n\n",
    "preview": {},
    "last_modified": "2021-03-27T22:29:02+01:00",
    "input_file": "interactive-plotly.utf8.md"
  },
  {
    "path": "posts/2020-09-29-run-an-r-script-as-a-background-job/",
    "title": "Run an R script as a background job",
    "description": "When working with R you may want to run a script that require quite a long time to complete. \nAs modern computers generally have more cores and ram than required this is not going to be a problem in terms of computer resources.\nNevertheless, the script will take your R prompt busy preventing you from any other activity. \nFunction `rstudioapi::jobRunScript()` allows you avoid this problem.",
    "author": [
      {
        "name": "Andrea Spano",
        "url": "andreaspano.github.io"
      }
    ],
    "date": "2021-03-27",
    "categories": [],
    "contents": "\n\nContents\nIntroduction\nR CMD BATCH\nRscript\njobRunScript (Kevin 2020)\n\nIntroduction\nWhen working with R you may want to run a script, say infile.R, that requires quite a long time to complete.\nIf you execute this script directly from the R console, it will keep your R session busy for long time preventing you from working on you current R session.\nNote that R is single thread, meaning that it takes resources from a single core, while modern computer have plenty of resources available, usually eight or more cores. Assuming that your script is not too eager in terms of RAM, you can easily send your script on anther core and keep working on your current R session.\nIn order to achive this goal you can use three different approaches:\nR CMD BATCH\nRScript\njobRunScript\nR CMD BATCH\nR CMD BATCH is a bash utility that allows you to run R in batch mode at the Unix terminal\nThe usual command is:\n\nR CMD BATCH infile.R outfile.log\n\n\nR executes the instructions from infile.R and writes the output, both stdout and stderr, to outfile.log\nThe above instruction silently implies two extra default parameters:\n\nR CMD BATCH --restore --save infile.R outfile.log\n\n\n--save: save the environment at the end of the computation into a file named .RData\n--restore: restore any .RData file into the R environment prior starting the computation\nI believe batch R scripts should be run by\n\nR CMD BATCH --no-restore --no-save infile.R outfile.log\n\n\nWith the above command, when R terminates the execution of infile.R the working environment where the computation occurred is not saved.\nTherefore, if you want save any object, this should be done explicitly with instructions like save(),saveRDS() or readr::write_rds().\nYou can always import the files generated from these functions into your working session by using instructions like load(), readRDS(). readr::read_rds().\nIn the above case, the R script runs in almost complete self isolation. In order to achieve complete isolation you should write:\n\nR CMD BATCH --no-restore --no-save --no-environ --no-site-file --no-init-file infile.R outfile.log\n\n\n--no-environ: do not use any environmental variables from the user profile\n--no-site-file: do to execute .Rprofile.site prior running the computation\n--no-init-file: do to execute local .Rprofile prior running the computation\nNote that the long above command can be shortened into:\n\nR CMD BATCH --vanilla infile.R outfile.log\n\n\nIn case you want to run R CMD BATCH and see R output at the Unix terminal rather than in a file, the following will do the trick:\n\nmkfifo Rfifo\ncat Rfifo &\nR CMD BATCH --vanilla infile.R Rfifo\n\n\nIn some situations you may want to pass arguments to the batch script. Quite often this happens when you want to run the same script against different data sources In this case, you do not want to write a version of your script for each data source but a single script that takes your data source as a parameter.\nSuppose a piece of code, saved in a file count.R, that simply count the number of rows in a file:\n\n\nargs <- commandArgs(trailingOnly = TRUE)\nfile <- args[[1]]\nlength(readLines(file))\n\n\n\nYou can invoke script count.R with:\n\nR CMD BATCH --vanilla '--args ~/tmp/count.R i.txt'  count.R count.log \n\nYou can read the output by editing count.log\nRscript\nRScript is an executable command that comes with R.\nIt takes as input any properly quoted R expression or script file. Output is usually redirected to stdout.\nAs a basic example with a single expression\n\nRscript  -e '1+1'\n\nOr with more than one expression separated bu semicolon\n\nRscript  -e '1+1; 2+2'\n\nTO BE CONTINUED\njobRunScript (Kevin 2020)\nFunction jobRunScript() from package rstudioapi is a newer and interesting alternative.\njobRunScript() is an R function from package rstudioapi and not a bash utility. As a result, you can run it at you R prompt within RStudio. jobRunScript() will execute your script in background and immediately return your R session available to you. Clearly, as jobRunScript() is part of or package rstudioapi it will not work outside RStudio\n\n\nrequire(rstudioapi)\njobRunScript(path = 'infile.R', \n             name = 'my long script',\n             encoding = \"unknown\", \n             workingDir = NULL,\n             importEnv = FALSE, \n             exportEnv = \"R_GlobalEnv\")\n\n\n\n\nThis command tells R to run your script and export the objects created within this environment\nAs stated by the function help:\npath: The path to the R script to be run.\nname: A name for the background job. When NULL (the default), the filename of the script is used as the job name.\nencoding: The text encoding of the script, if known.\nworkingDir: The working directory in which to run the job. When NULL (the default), the parent directory of the R script is used.\nimportEnv: Whether to import the global environment into the job.\nexportEnv: The name of the environment in which to export the R objects created by the job. Use \"\" (the default) to skip export, “R_GlobalEnv”’ to export to the global environment, or the name of an environment object to create an object with that name.\nTherefore, if you want to run a job a collect the results back in your working environmentyou need to set: exportEnv = \"R_GlobalEnv\"\nIn case you need to pass any object from your global environmemnt to teh script you may want to use importEnv = TRUE. Personally, I woulkd not reccomend this choice. A script would be better to be seft contained and not to depend from objects defined elsewhere.\n\n\n\nKevin, Ushey. 2020. “Rstudio Api V0.9.0.” https://www.rdocumentation.org/packages/rstudioapi/versions/0.9.0.\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-03-27T22:48:12+01:00",
    "input_file": "run-an-r-script-as-a-background-job.utf8.md"
  },
  {
    "path": "posts/2021-02-27-travis-ci/",
    "title": "Travis CI",
    "description": "How to build R packages more efficiently with __Travis Continuos Integration__ service",
    "author": [
      {
        "name": "Andrea Spano",
        "url": {}
      }
    ],
    "date": "2021-02-27",
    "categories": [],
    "contents": "\nTravis CI: https://travis-ci.org/ is a continuous integration service used to build and test software projects hosted on, but not only, GitHub.\n\n\n\n",
    "preview": {},
    "last_modified": "2021-02-27T20:50:46+01:00",
    "input_file": "travis-ci.utf8.md"
  },
  {
    "path": "posts/2020-10-06-data-analysis-with-spraklyr/",
    "title": "Data Analysis with Sparklyr",
    "description": "Sparklyr is an open-source package that provides an interface between R and Apache Spark. \nSparklyr provide an interface to use Spark as the backend for dplyr along with acess to Spark’s distributed machine learning algorithms\nThis article is about using sparkly within an R session",
    "author": [
      {
        "name": "Andrea Spano",
        "url": "andreaspano.github.io"
      }
    ],
    "date": "2020-10-10",
    "categories": [],
    "preview": "posts/2020-10-06-data-analysis-with-spraklyr/data-analysis-with-spraklyr_files/figure-html5/plot-1.png",
    "last_modified": "2020-10-10T02:07:00+02:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2020-10-07-functional-programming-with-r/",
    "title": "Functional Programming with R",
    "description": "`R` can be considered as a functional programming language as it focuses on the creation and manipulation of functions and has what's known as first class functions. Understanding the functional nature of `R` may help to improve clarity and avoid redundancy.",
    "author": [
      {
        "name": "Andrea Spano",
        "url": "andreaspano.github.io"
      }
    ],
    "date": "2020-10-10",
    "categories": [],
    "preview": "posts/2020-10-07-functional-programming-with-r/functional-programming-with-r_files/figure-html5/closures-023-1.png",
    "last_modified": "2020-10-10T01:15:42+02:00",
    "input_file": {},
    "preview_width": 1344,
    "preview_height": 768
  },
  {
    "path": "posts/2020-09-24-install-shinyproxy/",
    "title": "Install ShinyProxy",
    "description": "How to install shiny proxy in Ubuntu",
    "author": [
      {
        "name": "Andrea Spano",
        "url": "andreaspano.github.io"
      }
    ],
    "date": "2020-09-24",
    "categories": [],
    "preview": {},
    "last_modified": "2020-09-24T01:22:50+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-09-15-install-docker-engine/",
    "title": "Docker Installation",
    "description": "How to install Docker system on Ubuntu",
    "author": [
      {
        "name": "Andrea Spano",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2020-09-23",
    "categories": [],
    "preview": {},
    "last_modified": "2020-09-23T10:28:41+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-09-22-install-portainer/",
    "title": "Install Portainer",
    "description": "How to install Portainer on Ubuntu",
    "author": [
      {
        "name": "Andrea Spano",
        "url": "andreaspano.github.io"
      }
    ],
    "date": "2020-09-23",
    "categories": [],
    "preview": "posts/2020-09-22-install-portainer/distill-preview.png",
    "last_modified": "2020-09-23T00:19:12+02:00",
    "input_file": {},
    "preview_width": 1871,
    "preview_height": 439
  },
  {
    "path": "posts/2020-09-19-shiny-app-in-a-container/",
    "title": "How to dockerise a Shiny app",
    "description": "How to port a shiny app into a container",
    "author": [
      {
        "name": "Andrea Spano",
        "url": "andreaspano.github.io"
      }
    ],
    "date": "2020-09-20",
    "categories": [],
    "preview": {},
    "last_modified": "2020-09-20T11:51:52+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-09-20-how-to-move-docker-data-direcory/",
    "title": "Docker data direcory",
    "description": "How to move docker data direcory to a different location in ubuntu.",
    "author": [
      {
        "name": "Andrea Spano",
        "url": "andreaspano.github.io"
      }
    ],
    "date": "2020-09-20",
    "categories": [],
    "preview": {},
    "last_modified": "2020-09-20T20:17:07+02:00",
    "input_file": {}
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to andreaspano blog ",
    "description": "Welcome to my blog; \nthe place where I am trying to write what I learn about",
    "author": [
      {
        "name": "Andrea Spano",
        "url": "https://andreaspano.github.io/"
      }
    ],
    "date": "2020-09-01",
    "categories": [],
    "preview": "posts/welcome/images/welcome.jpg",
    "last_modified": "2020-09-23T09:34:10+02:00",
    "input_file": {}
  }
]
